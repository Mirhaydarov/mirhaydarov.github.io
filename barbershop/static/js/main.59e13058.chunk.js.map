{"version":3,"sources":["components/MainSideBar/index.tsx","components/MainHeader/index.tsx","components/MainContent/index.tsx","models/client/index.ts","models/modal/index.ts","models/filter/index.ts","utils/normalize.ts","utils/filter.ts","models/clients/index.ts","components/MainTable/hooks/useData.ts","components/MainTable/index.tsx","components/MainTable/columns-config.ts","components/SideBarItem/searchBar.tsx","components/SideBarItem/hooks/useSearch.ts","components/SideBarItem/collapse.tsx","components/SideBarItem/checkbox.tsx","components/SideBarItem/hooks/useCheckbox.ts","components/SideBarList/index.tsx","components/MainLayout/index.tsx","components/Modal/index.tsx","components/ClientDetails/index.tsx","components/App.tsx","index.tsx"],"names":["MainSideBar","props","children","logo","subTitle","Sider","Layout","Title","Typography","width","style","padding","backgroundColor","textAlign","level","fontSize","color","textShadow","marginTop","MainHeader","Header","MainContent","Content","$client","createStore","id","createdTime","createdDate","status","client","phone","price","barber","addClient","createEvent","on","state","$modal","toggleModal","toggle","$filteredState","filteredStateEvent","value","console","log","arrayOfValue","some","item","join","isValue","filter","concat","normalize","string","trim","toLowerCase","getKeyValue","key","obj","fetchClientsFx","createEffect","a","fetch","req","json","$clientsState","clients","$activeFilter","$filterType","$checkedFilter","$fetchError","restore","failData","$filteredClients","combine","type","checked","checkedTypes","array","filters","keys","Object","res","elem","hasOwnProperty","reduce","_","includes","filterArray","data","$clientsGetStatus","loading","pending","error","filtered","filteredType","checkedFiltered","doneData","boolean","MainTable","columns","useStore","useEffect","useData","ErrorJSX","className","dataSource","tableLayout","rowClassName","boxShadow","scroll","y","pagination","margin","onRow","record","onClick","event","title","dataIndex","SearchBar","placeholder","searchBy","Search","Input","onChange","isString","target","useSearch","onSearch","Collapses","Panel","Collapse","borderRadius","bordered","header","borderBottom","Checkboxs","useCheckbox","SideBarList","Item","List","split","MainLayout","background","height","Modal","visible","centered","closable","onOk","onCancel","footer","ClientDetails","orientation","display","justifyContent","Text","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59e13058.chunk.js","sourcesContent":["// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Layout, Typography } from \"antd\";\n\n// Types\ntype MainSideBarPropsTypes = {\n  logo: string | ReactNode;\n  subTitle: string;\n  children?: ReactNode;\n};\n\nconst MainSideBar: FC<MainSideBarPropsTypes> = (\n  props: MainSideBarPropsTypes\n) => {\n  const { children, logo, subTitle } = props;\n  const { Sider } = Layout;\n  const { Title } = Typography;\n\n  return (\n    <Sider\n      width={230}\n      style={{\n        width: \"40vw\",\n        padding: \"0 .5em\",\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        textAlign: \"center\",\n      }}\n    >\n      <Title\n        level={1}\n        style={{\n          fontSize: \"2.4em\",\n          color: \"#fff\",\n          textShadow: \"1px 1px 3px black\",\n          marginTop: \".3em\",\n        }}\n      >\n        {logo}\n      </Title>\n      <Title level={3} style={{ color: \"#c7c7c7\" }}>\n        {subTitle}\n      </Title>\n      {children}\n    </Sider>\n  );\n};\n\nexport { MainSideBar };\n","// Core\nimport React, { FC } from \"react\";\nimport { Layout } from \"antd\";\n\nconst MainHeader: FC = () => {\n  const { Header } = Layout;\n\n  return (\n    <Header\n      style={{\n        padding: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n      }}\n    />\n  );\n};\n\nexport { MainHeader };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Layout } from \"antd\";\n\n// Types\ntype MainContentPropsTypes = {\n  children?: ReactNode;\n};\n\nconst MainContent: FC<MainContentPropsTypes> = (\n  props: MainContentPropsTypes\n) => {\n  const { children } = props;\n  const { Content } = Layout;\n\n  return (\n    <Content>\n      {children}\n    </Content>\n  );\n};\n\nexport { MainContent };\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\n// Types\nimport { ClientTypes } from \"../../init/types\";\n\n// Store\nexport const $client = createStore<ClientTypes>({\n  id: \"\",\n  createdTime: \"\",\n  createdDate: \"\",\n  status: \"\",\n  client: \"\",\n  phone: \"\",\n  price: \"\",\n  barber: \"\",\n});\n\n// Events\nexport const addClient = createEvent<ClientTypes>();\n\n// Actions\n$client.on(addClient, (state, client) => client);\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\n// Store\nexport const $modal = createStore<boolean>(false);\n\n// Events\nexport const toggleModal = createEvent<boolean>();\n\n// Actions\n$modal.on(toggleModal, (state, toggle) => toggle);\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\nconst state = {\n  Готов: false,\n  Закрыт: false,\n  \"В работе\": false,\n};\n\nexport type StateTypes = {\n  Готов: boolean;\n  Закрыт: boolean;\n  \"В работе\": boolean;\n};\n\nconst isValue = (state: any, arrayOfValue: any) => {\n  return state.some((item: string) => item === arrayOfValue.join(\" \"));\n};\n\n// Store\nexport const $filteredState = createStore<any>([]);\n\n// Event\nexport const filteredStateEvent = createEvent<any>();\n\n// Actions\n$filteredState.on(filteredStateEvent, (state, value) => {\n  console.log(state);\n  if (isValue(state, value)) {\n    return state.filter((item: string) => item !== value.join(\" \"));\n  }\n  console.log(state);\n  return state.concat(value);\n});\n","export const normalize = (string: string) => string.trim().toLowerCase();\n","// Types\nimport { ClientTypes } from \"../init/types\";\n\nconst getKeyValue = <K extends keyof T, T extends object>(key: K) => (obj: T) =>\n  obj[key];\n\nconst filter = (\n  array: ClientTypes[] = [],\n  filters: Record<string, any> = {}\n) => {\n  const keys = Object.keys(filters);\n  const res = array.filter((elem) => {\n    const commonKeys = keys.filter((key) => elem.hasOwnProperty(key));\n\n    return commonKeys.reduce((_, key) => {\n      console.log(filters[key]);\n      return filters[key].includes(\n        getKeyValue<keyof ClientTypes, ClientTypes>(\"status\")(elem)\n      );\n    }, \"\");\n  });\n  return res;\n};\n\nexport { filter };\n","// Core\nimport {\n  createStore,\n  createEffect,\n  createEvent,\n  restore,\n  combine,\n} from \"effector\";\n\n// Models\nimport { $filteredState } from \"../filter\";\n\n// Utils\nimport { normalize, filter as filterArray } from \"../../utils\";\n\n// Types\nimport {\n  ClientsTypes,\n  ClientTypes,\n  FilterClientSearchTypes,\n} from \"../../init/types\";\n\nexport type CheckedFilterTypes = \"Готов\" | \"Закрыт\" | \"В работе\" | \"\";\nexport type CheckedFilterArrayTypes = CheckedFilterTypes[];\nexport type CheckedStatus = { status: string[] };\n\n// Effects\nexport const fetchClientsFx = createEffect<void, ClientsTypes, Error>(\n  async () => {\n    const req = await fetch(\"db.json\");\n    return req.json();\n  }\n);\n\n// Store\nexport const $clientsState = createStore<ClientsTypes>({ clients: [] });\nexport const $activeFilter = createStore<string>(\"\");\nexport const $filterType = createStore<any>(\"\");\nexport const $checkedFilter = createStore<boolean>(false);\n\nexport const $fetchError = restore<Error>(fetchClientsFx.failData, null);\n\nexport const $filteredClients = combine(\n  $clientsState,\n  $activeFilter,\n  $filterType,\n  $checkedFilter,\n  $filteredState,\n  ({ clients }, filter, type, checked, checkedTypes) => {\n    if (filter === \"\" && !checked) {\n      return clients;\n    } else if (checked) {\n      return filterArray(clients, {\n        status: checkedTypes,\n      });\n    }\n    return clients.filter((data: any) =>\n      normalize(data[type]).includes(normalize(filter))\n    );\n  }\n);\n\nexport const $clientsGetStatus = combine({\n  loading: fetchClientsFx.pending,\n  error: $fetchError,\n  data: $filteredClients,\n});\n\n// Event\nexport const addClients = createEvent<ClientsTypes>();\nexport const filtered = createEvent<any>();\nexport const filteredType = createEvent<FilterClientSearchTypes>();\nexport const checkedFiltered = createEvent<boolean>();\n\n// Actions\n$clientsState.on(fetchClientsFx.doneData, (state, data) => data);\n$activeFilter.on(filtered, (state, value) => value);\n$filterType.on(filteredType, (state, value) => value);\n$checkedFilter.on(checkedFiltered, (state, boolean) => boolean);\n","// Core\nimport { useEffect } from \"react\";\nimport { useStore } from \"effector-react\";\n\n// Models\nimport { $clientsGetStatus, fetchClientsFx } from \"../../../models/clients\";\n\nexport const useData = () => {\n  const { loading, error, data } = useStore($clientsGetStatus);\n\n  useEffect(() => {\n    fetchClientsFx();\n  }, []);\n\n  return {\n    loading,\n    error,\n    data,\n  };\n};\n","// Core\nimport React, { FC } from \"react\";\nimport { Table } from \"antd\";\nimport { ColumnProps } from \"antd/es/table\";\n\n// Models\nimport { addClient } from \"../../models/client\";\nimport { toggleModal } from \"../../models/modal\";\n\n// Hooks\nimport { useData } from \"./hooks/useData\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\nimport { ClientTypes } from \"../../init/types\";\n\ntype MainTablePropsTypes = {\n  columns: ColumnProps<ClientTypes>[];\n  data: ClientTypes[];\n};\n\nconst MainTable: FC<MainTablePropsTypes> = (props: MainTablePropsTypes) => {\n  const { columns } = props;\n  const { loading, error, data } = useData();\n\n  const ErrorJSX = error && loading && <div>Error!</div>;\n\n  return (\n    <div className=\"table-wrap\">\n      {ErrorJSX}\n      <Table<ClientTypes>\n        className=\"table\"\n        loading={loading}\n        columns={columns}\n        dataSource={data}\n        tableLayout=\"fixed\"\n        rowClassName={() => \"ant-table__row\"}\n        style={{\n          boxShadow: \"0 0 .3em rgba(255, 255, 255, .1)\",\n        }}\n        scroll={{ y: 350 }}\n        pagination={{ style: { margin: \"1em\" } }}\n        onRow={(record) => {\n          return {\n            onClick: (event) => {\n              addClient(record);\n              toggleModal(true);\n            },\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nexport { MainTable };\n","// Core\nimport { ColumnProps } from \"antd/es/table\";\n\n// Types\nimport { ClientTypes } from \"../../init/types\";\n\nexport const columns: ColumnProps<ClientTypes>[] = [\n  {\n    key: \"id\",\n    title: \"Номер\",\n    dataIndex: \"id\",\n  },\n  {\n    key: \"createdDate\",\n    title: \"Дата\",\n    dataIndex: \"createdDate\",\n  },\n  {\n    key: \"createdTime\",\n    title: \"Время\",\n    dataIndex: \"createdTime\",\n  },\n  {\n    key: \"status\",\n    title: \"Статус\",\n    dataIndex: \"status\",\n  },\n  {\n    key: \"client\",\n    title: \"Клиент\",\n    dataIndex: \"client\",\n  },\n  {\n    key: \"phone\",\n    title: \"Телефон клиента\",\n    dataIndex: \"phone\",\n  },\n  {\n    key: \"price\",\n    title: \"Стоимость услуги\",\n    dataIndex: \"price\",\n  },\n  {\n    key: \"barber\",\n    title: \"Барбер\",\n    dataIndex: \"barber\",\n  },\n];\n","// Core\nimport React, { FC } from \"react\";\nimport { Input } from \"antd\";\n\n// Models\nimport { FilterClientSearchTypes } from \"../../init/types\";\n\n// Hooks\nimport { useSearch } from \"./hooks/useSearch\";\n\n// Styles\nimport './index.css';\n\n// Types\ntype SearchBarPropsTypes = {\n  placeholder: string;\n  searchBy: FilterClientSearchTypes;\n};\n\nconst SearchBar: FC<SearchBarPropsTypes> = (props: SearchBarPropsTypes) => {\n  const { placeholder, searchBy } = props;\n  const { Search } = Input;\n\n  const { onChange } = useSearch(searchBy);\n\n  return (\n    <Search\n      className=\"searchBar\"\n      style={{ marginTop: '.4em', backgroundColor: '#636363', color: '#fff' }}\n      placeholder={placeholder}\n      onSearch={(value) => onChange(value)}\n      onChange={onChange}\n    />\n  );\n};\n\nexport { SearchBar };\n","// Core\nimport { ChangeEvent } from \"react\";\n\n// Models\nimport { filtered, filteredType } from \"../../../models/clients\";\n\n\n// Types\nimport { FilterClientSearchTypes } from \"../../../init/types\";\nimport { filteredStateEvent } from \"../../../models/filter\";\n\nconst useSearch = (searchBy: FilterClientSearchTypes) => {\n  const isString = (\n    event: ChangeEvent<HTMLInputElement> | string\n  ): event is string => {\n    return typeof event === \"string\";\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement> | string) => {\n    filteredType(searchBy);\n\n    if (isString(event)) {\n      filtered(event);\n    } else {\n      const { value } = event.target;\n      filtered(value);\n    }\n  };\n\n  return {\n    onChange,\n  };\n};\n\nexport { useSearch };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Collapse } from \"antd\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\ntype CollapsesPropsTypes = {\n  title: string;\n  children: ReactNode;\n};\n\nconst Collapses: FC<CollapsesPropsTypes> = (props: CollapsesPropsTypes) => {\n  const { children, title } = props;\n  const { Panel } = Collapse;\n\n  const collapseStyles = {\n    fontSize: \"1.2rem\",\n    backgroundColor: \"rgba(0,0,0,.1)\",\n    boxShadow: \"0 0 .3em rgba(255, 255, 255, .1)\",\n    marginTop: \"1em\",\n    borderRadius: \".5em\",\n  };\n\n  return (\n    <Collapse className=\"collapse\" style={collapseStyles} bordered={false}>\n      <Panel header={title} key={title} style={{ borderBottom: \"none\" }}>\n        {children}\n      </Panel>\n    </Collapse>\n  );\n};\n\nexport { Collapses };\n","// Core\nimport React, { FC } from \"react\";\nimport { Checkbox } from \"antd\";\nimport { CheckedFilterTypes } from \"../../models/clients\";\n\nimport { useCheckbox } from \"./hooks/useCheckbox\";\n\n// Types\ntype CheckboxsPropsTypes = {\n  title: string;\n  value: CheckedFilterTypes;\n};\n\nconst Checkboxs: FC<CheckboxsPropsTypes> = (props: CheckboxsPropsTypes) => {\n  const { title, value } = props;\n\n  const { onChange } = useCheckbox(value);\n\n  return (\n    <Checkbox onChange={onChange} className=\"checkbox\" style={{ color: \"rgba(255, 255, 255, .85)\" }}>\n      {title}\n    </Checkbox>\n  );\n};\n\nexport { Checkboxs };\n","// Core\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport { checkedFiltered, CheckedFilterTypes } from \"../../../models/clients\";\n\nimport { filteredStateEvent } from \"../../../models/filter\";\n\nconst useCheckbox = (value: CheckedFilterTypes) => {\n  const onChange = (event: CheckboxChangeEvent) => {\n    const { checked } = event.target;\n\n    checkedFiltered(checked);\n\n    filteredStateEvent([value]);\n  };\n\n  return {\n    onChange,\n  };\n};\n\nexport { useCheckbox };\n","// Core\nimport React, { FC } from \"react\";\nimport { List } from \"antd\";\n\n// Components\nimport { Checkboxs, Collapses, SearchBar } from \"../SideBarItem\";\n\n// Styles\nimport \"./index.css\";\n\nconst SideBarList: FC = () => {\n  const { Item } = List;\n\n  return (\n    <Collapses title=\"Фильтры\">\n      <SearchBar placeholder=\"Клиент\" searchBy=\"client\" />\n      <Collapses title=\"Поиск\">\n        <SearchBar placeholder=\"Клиент\" searchBy=\"client\" />\n        <SearchBar placeholder=\"Барбер\" searchBy=\"barber\" />\n        <SearchBar placeholder=\"Статус\" searchBy=\"status\" />\n      </Collapses>\n      <List>\n        <Item>\n          <Checkboxs title=\"Готов\" value=\"Готов\" />\n        </Item>\n      </List>\n      <List split={false}>\n        <Item>\n          <Checkboxs title=\"Готов\" value=\"Готов\" />\n        </Item>\n        <Item>\n          <Checkboxs title=\"Закрыт\" value=\"Закрыт\" />\n        </Item>\n        <Item>\n          <Checkboxs title=\"В работе\" value=\"В работе\" />\n        </Item>\n      </List>\n    </Collapses>\n  );\n};\n\nexport { SideBarList };\n","// Core\nimport React, { FC } from \"react\";\nimport { Layout } from \"antd\";\n\n// Components\nimport { MainSideBar } from \"../MainSideBar\";\nimport { MainHeader } from \"../MainHeader\";\nimport { MainContent } from \"../MainContent\";\nimport { MainTable } from \"../MainTable\";\n\nimport { columns } from \"../MainTable/columns-config\";\nimport { useStore } from \"effector-react\";\nimport { $clientsState } from \"../../models/clients\";\nimport { SideBarList } from \"../SideBarList\";\n\nconst MainLayout: FC = () => {\n  const { clients } = useStore($clientsState);\n \n  return (\n    <Layout style={{ background: \"#323840\", height: '100vh' }}>\n      <MainSideBar logo=\"Barbershop\" subTitle=\"Журнал заказов\">\n        <SideBarList />\n      </MainSideBar>\n      <Layout style={{background: \"rgba(0, 0, 0, .2)\", padding: '1em' }}>\n        <MainHeader />\n        <MainContent>\n          <MainTable columns={columns} data={clients} />\n        </MainContent>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport { MainLayout };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { Modal as Popup } from \"antd\";\n\n// Store\nimport { $modal, toggleModal } from \"../../models/modal\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\ntype ModalPropsTypes = {\n  children: ReactNode;\n};\n\nconst Modal: FC<ModalPropsTypes> = (props: ModalPropsTypes) => {\n  const { children } = props;\n\n  const visible = useStore($modal);\n\n  return (\n    <Popup\n      centered\n      className=\"modal\"\n      closable={true}\n      visible={visible}\n      onOk={() => toggleModal(false)}\n      onCancel={() => toggleModal(false)}\n      width={\"35vw\"}\n      footer={null}\n    >\n      {children}\n    </Popup>\n  );\n};\n\nexport { Modal };\n","// Core\nimport React, { FC } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { List, Divider, Typography } from \"antd\";\n\n// Store\nimport { $client } from \"../../models/client\";\n\nconst ClientDetails: FC = () => {\n  const {\n    createdDate,\n    createdTime,\n    client,\n    status,\n    phone,\n    price,\n    barber,\n  } = useStore($client);\n\n  return (\n    <>\n      <Divider orientation=\"left\">Статус</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Дата</Typography.Text> {createdDate}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Время</Typography.Text>{\" \"}\n          {createdTime}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Статус</Typography.Text> {status}\n        </List.Item>\n      </List>\n\n      <Divider orientation=\"left\">Клиент</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Имя Клиента</Typography.Text>{\" \"}\n          {client}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Номер телефона</Typography.Text>{\" \"}\n          {phone}\n        </List.Item>\n      </List>\n\n      <Divider orientation=\"left\">Барбер</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Барбер</Typography.Text> {barber}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Цена</Typography.Text> {price}\n        </List.Item>\n      </List>\n    </>\n  );\n};\n\nexport { ClientDetails };\n","// Core\nimport React, { FC } from \"react\";\n\n// Component\nimport { MainLayout } from \"./MainLayout\";\nimport { Modal } from \"../components/Modal\";\nimport { ClientDetails } from \"../components/ClientDetails\";\n\nconst App: FC = () => {\n  return (\n    <div>\n      <MainLayout />\n      <Modal>\n        <ClientDetails/>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Components\nimport App from \"./components/App\";\n\n// Styles\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}