{"version":3,"sources":["components/MainSideBar/index.tsx","components/MainHeader/index.tsx","components/MainContent/index.tsx","models/client/index.ts","init/types.ts","models/modal/index.ts","models/filter/index.ts","utils/normalize.ts","utils/filter.ts","models/clients/index.ts","components/MainTable/hooks/useData.ts","components/MainTable/index.tsx","components/SideBarItem/searchBar.tsx","components/SideBarItem/hooks/useSearch.ts","components/SideBarItem/collapse.tsx","components/SideBarItem/checkbox.tsx","components/SideBarList/index.tsx","components/MainTable/columns-config.ts","components/MainLayout/index.tsx","components/Modal/index.tsx","components/ClientDetails/index.tsx","components/App.tsx","index.tsx"],"names":["MainSideBar","props","children","logo","subTitle","Sider","Layout","Title","Typography","width","style","padding","backgroundColor","textAlign","level","fontSize","color","textShadow","marginTop","MainHeader","Header","MainContent","Content","$client","createStore","id","createdDate","createdTime","status","client","phone","price","barber","addClient","createEvent","on","state","$modal","toggleModal","toggle","$filteredCheckboxValue","addCheckboxValue","value","arrayOfValue","some","item","join","isValue","filter","concat","normalize","string","trim","toLowerCase","getKeyValue","key","obj","fetchClientsFx","createEffect","a","fetch","req","json","$clients","clients","$searchValue","$typeSearchValue","$fetchError","restore","failData","$searchFilteredClients","combine","typeValue","data","includes","$checkboxFilteredClients","checkboxValue","length","array","filters","keys","Object","res","elem","hasOwnProperty","reduce","_","filterArray","$filteredClients","searchClients","checkboxClients","$clientsGetStatus","loading","pending","error","addSearchValue","addTypeSearchValue","doneData","MainTable","columns","useStore","useEffect","useData","ErrorJSX","className","dataSource","tableLayout","rowClassName","boxShadow","scroll","y","pagination","margin","onRow","record","onClick","event","SearchBar","placeholder","searchBy","Search","Input","onChange","isString","target","useSearch","onSearch","Collapse","title","Panel","Collapses","borderRadius","bordered","header","borderBottom","Checkbox","SideBarList","Item","List","split","dataIndex","MainLayout","background","height","Modal","visible","centered","closable","onCancel","footer","ClientDetails","orientation","display","justifyContent","Text","type","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.844bf680.chunk.js","sourcesContent":["// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Layout, Typography } from \"antd\";\n\n// Types\ntype MainSideBarPropsTypes = {\n  logo: string | ReactNode;\n  subTitle: string;\n  children?: ReactNode;\n};\n\nconst MainSideBar: FC<MainSideBarPropsTypes> = (\n  props: MainSideBarPropsTypes\n) => {\n  const { children, logo, subTitle } = props;\n  const { Sider } = Layout;\n  const { Title } = Typography;\n\n  return (\n    <Sider\n      width={230}\n      style={{\n        width: \"40vw\",\n        padding: \"0 .5em\",\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        textAlign: \"center\",\n      }}\n    >\n      <Title\n        level={1}\n        style={{\n          fontSize: \"2.4em\",\n          color: \"#fff\",\n          textShadow: \"1px 1px 3px black\",\n          marginTop: \".3em\",\n        }}\n      >\n        {logo}\n      </Title>\n      <Title level={3} style={{ color: \"#c7c7c7\" }}>\n        {subTitle}\n      </Title>\n      {children}\n    </Sider>\n  );\n};\n\nexport { MainSideBar };\n","// Core\nimport React, { FC } from \"react\";\nimport { Layout } from \"antd\";\n\nconst MainHeader: FC = () => {\n  const { Header } = Layout;\n\n  return (\n    <Header\n      style={{\n        padding: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n      }}\n    />\n  );\n};\n\nexport { MainHeader };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Layout } from \"antd\";\n\n// Types\ntype MainContentPropsTypes = {\n  children?: ReactNode;\n};\n\nconst MainContent: FC<MainContentPropsTypes> = (\n  props: MainContentPropsTypes\n) => {\n  const { children } = props;\n  const { Content } = Layout;\n\n  return (\n    <Content>\n      {children}\n    </Content>\n  );\n};\n\nexport { MainContent };\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\n// Types\nimport { ClientTypes, clientTemplate } from \"../../init/types\";\n\n// Store\nexport const $client = createStore<ClientTypes>(clientTemplate);\n\n// Events\nexport const addClient = createEvent<ClientTypes>();\n\n// Actions\n$client.on(addClient, (state, client) => client);\n","export const clientTemplate = {\n  id: \"\",\n  createdDate: \"\",\n  createdTime: \"\",\n  status: \"\",\n  client: \"\",\n  phone: \"\",\n  price: \"\",\n  barber: \"\",\n};\n\nexport type ClientTypes = {\n  id: string;\n  createdDate: string;\n  createdTime: string;\n  status: string;\n  client: string;\n  phone: string;\n  price: string;\n  barber: string;\n};\n\nexport type ClientsTypes = {\n  clients: ClientTypes[];\n};\n\nexport type FilterClientSearchTypes = keyof typeof clientTemplate;\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\n// Store\nexport const $modal = createStore<boolean>(false);\n\n// Events\nexport const toggleModal = createEvent<boolean>();\n\n// Actions\n$modal.on(toggleModal, (state, toggle) => toggle);\n","// Core\nimport { createStore, createEvent } from \"effector\";\n\n// Types\nimport { CheckboxValueTypes } from \"../../components/SideBarItem/checkbox\";\n\nconst isValue = (\n  state: CheckboxValueTypes[],\n  arrayOfValue: CheckboxValueTypes[]\n) => {\n  return state.some((item) => item === arrayOfValue.join(\" \"));\n};\n\n// Store\nexport const $filteredCheckboxValue = createStore<CheckboxValueTypes[]>([]);\n\n// Event\nexport const addCheckboxValue = createEvent<CheckboxValueTypes[]>();\n\n// Actions\n$filteredCheckboxValue.on(addCheckboxValue, (state, value) => {\n  if (isValue(state, value)) {\n    return state.filter((item) => item !== value.join(\" \"));\n  }\n  return state.concat(value);\n});","export const normalize = (string: string) => string.trim().toLowerCase();\n","// Types\nimport { ClientTypes } from \"../init/types\";\n\nconst getKeyValue = <K extends keyof T, T extends object>(key: K) => (obj: T) =>\n  obj[key];\n\nconst filter = (\n  array: ClientTypes[] = [],\n  filters: Record<string, any> = {}\n) => {\n  const keys = Object.keys(filters);\n  const res = array.filter((elem) => {\n    const commonKeys = keys.filter((key) => elem.hasOwnProperty(key));\n\n    return commonKeys.reduce((_, key) => {\n      return filters[key].includes(\n        getKeyValue<keyof ClientTypes, ClientTypes>(\"status\")(elem)\n      );\n    }, \"\");\n  });\n  return res;\n};\n\nexport { filter };\n","// Core\nimport {\n  createStore,\n  createEffect,\n  createEvent,\n  restore,\n  combine,\n} from \"effector\";\n\n// Models\nimport { $filteredCheckboxValue } from \"../filter\";\n\n// Utils\nimport { normalize, filter as filterArray } from \"../../utils\";\n\n// Types\nimport {\n  ClientTypes,\n  ClientsTypes,\n  FilterClientSearchTypes,\n} from \"../../init/types\";\n\n// Effects\nexport const fetchClientsFx = createEffect<void, ClientsTypes, Error>(\n  async () => {\n    const req = await fetch(\"db.json\");\n    return req.json();\n  }\n);\n\n// Store\nexport const $clients = createStore<ClientsTypes>({ clients: [] });\nexport const $searchValue = createStore<string>(\"\");\nexport const $typeSearchValue = createStore<FilterClientSearchTypes>(\"id\");\n\nexport const $fetchError = restore<Error>(fetchClientsFx.failData, null);\n\nexport const $searchFilteredClients = combine(\n  $clients,\n  $searchValue,\n  $typeSearchValue,\n  ({ clients }, value, typeValue) =>\n    value === \"\"\n      ? clients\n      : clients.filter((data: ClientTypes) =>\n          normalize(data[typeValue]).includes(normalize(value))\n        )\n);\n\nexport const $checkboxFilteredClients = combine(\n  $clients,\n  $filteredCheckboxValue,\n  ({ clients }, checkboxValue) =>\n    !checkboxValue.length\n      ? clients\n      : filterArray(clients, {\n          status: checkboxValue,\n        })\n);\n\nexport const $filteredClients = combine(\n  $clients,\n  $searchFilteredClients,\n  $checkboxFilteredClients,\n  $searchValue,\n  $filteredCheckboxValue,\n  ({ clients }, searchClients, checkboxClients, value, checkboxValue) => {\n    if (checkboxValue.length) {\n      return checkboxClients;\n    } else if (value) {\n      return searchClients;\n    }\n    return clients;\n  }\n);\n\nexport const $clientsGetStatus = combine({\n  loading: fetchClientsFx.pending,\n  error: $fetchError,\n  data: $filteredClients,\n});\n\n// Event\nexport const addSearchValue = createEvent<string>();\nexport const addTypeSearchValue = createEvent<FilterClientSearchTypes>();\n\n// Actions\n$clients.on(fetchClientsFx.doneData, (state, data) => data);\n$searchValue.on(addSearchValue, (state, value) => value);\n$typeSearchValue.on(addTypeSearchValue, (state, value) => value);\n","// Core\nimport { useEffect } from \"react\";\nimport { useStore } from \"effector-react\";\n\n// Models\nimport { $clientsGetStatus, fetchClientsFx } from \"../../../models/clients\";\n\nexport const useData = () => {\n  const { loading, error, data } = useStore($clientsGetStatus);\n\n  useEffect(() => {\n    fetchClientsFx();\n  }, []);\n\n  return {\n    loading,\n    error,\n    data,\n  };\n};\n","// Core\nimport React, { FC } from \"react\";\nimport { Table } from \"antd\";\nimport { ColumnProps } from \"antd/es/table\";\n\n// Models\nimport { addClient } from \"../../models/client\";\nimport { toggleModal } from \"../../models/modal\";\n\n// Hooks\nimport { useData } from \"./hooks/useData\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\nimport { ClientTypes } from \"../../init/types\";\n\ntype MainTablePropsTypes = {\n  columns: ColumnProps<ClientTypes>[];\n  data: ClientTypes[];\n};\n\nconst MainTable: FC<MainTablePropsTypes> = (props: MainTablePropsTypes) => {\n  const { columns } = props;\n  const { loading, error, data } = useData();\n\n  const ErrorJSX = error && loading && <div>Error!</div>;\n\n  return (\n    <div className=\"table-wrap\">\n      {ErrorJSX}\n      <Table<ClientTypes>\n        className=\"table\"\n        loading={loading}\n        columns={columns}\n        dataSource={data}\n        tableLayout=\"fixed\"\n        rowClassName={() => \"ant-table__row\"}\n        style={{\n          boxShadow: \"0 0 .3em rgba(255, 255, 255, .1)\",\n        }}\n        scroll={{ y: 350 }}\n        pagination={{ style: { margin: \"1em\" } }}\n        onRow={(record) => {\n          return {\n            onClick: (event) => {\n              addClient(record);\n              toggleModal(true);\n            },\n          };\n        }}\n      />\n    </div>\n  );\n};\n\nexport { MainTable };\n","// Core\nimport React, { FC } from \"react\";\nimport { Input } from \"antd\";\n\n// Models\nimport { FilterClientSearchTypes } from \"../../init/types\";\n\n// Hooks\nimport { useSearch } from \"./hooks/useSearch\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\ntype SearchBarPropsTypes = {\n  placeholder: string;\n  searchBy: FilterClientSearchTypes;\n};\n\nconst SearchBar: FC<SearchBarPropsTypes> = (props: SearchBarPropsTypes) => {\n  const { placeholder, searchBy } = props;\n  const { Search } = Input;\n\n  const { onChange } = useSearch(searchBy);\n\n  return (\n    <Search\n      className=\"searchBar\"\n      style={{ marginTop: \".4em\", backgroundColor: \"#636363\", color: \"#fff\" }}\n      placeholder={placeholder}\n      onSearch={(value: string) => onChange(value)}\n      onChange={onChange}\n    />\n  );\n};\n\nexport { SearchBar };\n","// Core\nimport { ChangeEvent } from \"react\";\n\n// Models\nimport { addSearchValue, addTypeSearchValue } from \"../../../models/clients\";\n\n// Types\nimport { FilterClientSearchTypes } from \"../../../init/types\";\n\nconst useSearch = (searchBy: FilterClientSearchTypes) => {\n  const isString = (\n    event: ChangeEvent<HTMLInputElement> | string\n  ): event is string => {\n    return typeof event === \"string\";\n  };\n\n  const onChange = (event: ChangeEvent<HTMLInputElement> | string) => {\n    addTypeSearchValue(searchBy);\n\n    if (isString(event)) {\n      addSearchValue(event);\n    } else {\n      const { value } = event.target;\n      addSearchValue(value);\n    }\n  };\n\n  return {\n    onChange,\n  };\n};\n\nexport { useSearch };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { Collapse as Collapses } from \"antd\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\ntype CollapsePropsTypes = {\n  title: string;\n  children: ReactNode;\n};\n\nconst Collapse: FC<CollapsePropsTypes> = (props: CollapsePropsTypes) => {\n  const { children, title } = props;\n  const { Panel } = Collapses;\n\n  const collapseStyles = {\n    fontSize: \"1.2rem\",\n    backgroundColor: \"rgba(0,0,0,.1)\",\n    boxShadow: \"0 0 .3em rgba(255, 255, 255, .1)\",\n    marginTop: \"1em\",\n    borderRadius: \".5em\",\n  };\n\n  return (\n    <Collapses className=\"collapse\" style={collapseStyles} bordered={false}>\n      <Panel header={title} key={title} style={{ borderBottom: \"none\" }}>\n        {children}\n      </Panel>\n    </Collapses>\n  );\n};\n\nexport { Collapse };\n","// Core\nimport React, { FC } from \"react\";\nimport { Checkbox as Check } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\n\n// Models\nimport { addCheckboxValue } from \"../../models/filter\";\n\n// Types\nexport type CheckboxValueTypes = \"Готов\" | \"Закрыт\" | \"В работе\";\n\ntype CheckboxPropsTypes = {\n  title: string;\n  value: CheckboxValueTypes;\n};\n\nconst Checkbox: FC<CheckboxPropsTypes> = (props: CheckboxPropsTypes) => {\n  const { title, value } = props;\n\n  const onChange = (event: CheckboxChangeEvent) => {\n    addCheckboxValue([value]);\n  };\n\n  return (\n    <Check\n      className=\"checkbox\"\n      onChange={onChange}\n      style={{ color: \"rgba(255, 255, 255, .85)\" }}\n    >\n      {title}\n    </Check>\n  );\n};\n\nexport { Checkbox };\n","// Core\nimport React, { FC } from \"react\";\nimport { List } from \"antd\";\n\n// Components\nimport { Checkbox, Collapse, SearchBar } from \"../SideBarItem\";\n\nconst SideBarList: FC = () => {\n  const { Item } = List;\n\n  return (\n    <Collapse title=\"Фильтры\">\n      <SearchBar placeholder=\"Клиент\" searchBy=\"client\" />\n      <Collapse title=\"Поиск\">\n        <SearchBar placeholder=\"Клиент\" searchBy=\"client\" />\n        <SearchBar placeholder=\"Барбер\" searchBy=\"barber\" />\n        <SearchBar placeholder=\"Статус\" searchBy=\"status\" />\n      </Collapse>\n      <List>\n        <Item>\n          <Checkbox title=\"Готов\" value=\"Готов\" />\n        </Item>\n      </List>\n      <List split={false}>\n        <Item>\n          <Checkbox title=\"Готов\" value=\"Готов\" />\n        </Item>\n        <Item>\n          <Checkbox title=\"Закрыт\" value=\"Закрыт\" />\n        </Item>\n        <Item>\n          <Checkbox title=\"В работе\" value=\"В работе\" />\n        </Item>\n      </List>\n    </Collapse>\n  );\n};\n\nexport { SideBarList };\n","// Core\nimport { ColumnProps } from \"antd/es/table\";\n\n// Types\nimport { ClientTypes } from \"../../init/types\";\n\nexport const columns: ColumnProps<ClientTypes>[] = [\n  {\n    key: \"id\",\n    title: \"Номер\",\n    dataIndex: \"id\",\n  },\n  {\n    key: \"createdDate\",\n    title: \"Дата\",\n    dataIndex: \"createdDate\",\n  },\n  {\n    key: \"createdTime\",\n    title: \"Время\",\n    dataIndex: \"createdTime\",\n  },\n  {\n    key: \"status\",\n    title: \"Статус\",\n    dataIndex: \"status\",\n  },\n  {\n    key: \"client\",\n    title: \"Клиент\",\n    dataIndex: \"client\",\n  },\n  {\n    key: \"phone\",\n    title: \"Телефон клиента\",\n    dataIndex: \"phone\",\n  },\n  {\n    key: \"price\",\n    title: \"Стоимость услуги\",\n    dataIndex: \"price\",\n  },\n  {\n    key: \"barber\",\n    title: \"Барбер\",\n    dataIndex: \"barber\",\n  },\n];\n","// Core\nimport React, { FC } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { Layout } from \"antd\";\n\n// Components\nimport { MainSideBar } from \"../MainSideBar\";\nimport { MainHeader } from \"../MainHeader\";\nimport { MainContent } from \"../MainContent\";\nimport { MainTable } from \"../MainTable\";\nimport { SideBarList } from \"../SideBarList\";\nimport { columns } from \"../MainTable/columns-config\";\n\n// Models\nimport { $filteredClients } from \"../../models/clients\";\n\nconst MainLayout: FC = () => {\n  const data = useStore($filteredClients);\n \n  return (\n    <Layout style={{ background: \"#323840\", height: '100vh' }}>\n      <MainSideBar logo=\"Barbershop\" subTitle=\"Журнал заказов\">\n        <SideBarList />\n      </MainSideBar>\n      <Layout style={{background: \"rgba(0, 0, 0, .2)\", padding: '1em' }}>\n        <MainHeader />\n        <MainContent>\n          <MainTable columns={columns} data={data} />\n        </MainContent>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport { MainLayout };\n","// Core\nimport React, { FC, ReactNode } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { Modal as Popup } from \"antd\";\n\n// Store\nimport { $modal, toggleModal } from \"../../models/modal\";\n\n// Styles\nimport \"./index.css\";\n\n// Types\ntype ModalPropsTypes = {\n  children: ReactNode;\n};\n\nconst Modal: FC<ModalPropsTypes> = (props: ModalPropsTypes) => {\n  const { children } = props;\n\n  const visible = useStore($modal);\n\n  return (\n    <Popup\n      centered\n      className=\"modal\"\n      closable={true}\n      visible={visible}\n      onCancel={() => toggleModal(false)}\n      width={\"35vw\"}\n      footer={null}\n    >\n      {children}\n    </Popup>\n  );\n};\n\nexport { Modal };\n","// Core\nimport React, { FC } from \"react\";\nimport { useStore } from \"effector-react\";\nimport { List, Divider, Typography } from \"antd\";\n\n// Store\nimport { $client } from \"../../models/client\";\n\nconst ClientDetails: FC = () => {\n  const {\n    createdDate,\n    createdTime,\n    client,\n    status,\n    phone,\n    price,\n    barber,\n  } = useStore($client);\n\n  return (\n    <>\n      <Divider orientation=\"left\">Статус</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Дата</Typography.Text> {createdDate}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Время</Typography.Text>{\" \"}\n          {createdTime}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Статус</Typography.Text> {status}\n        </List.Item>\n      </List>\n\n      <Divider orientation=\"left\">Клиент</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Имя Клиента</Typography.Text>{\" \"}\n          {client}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Номер телефона</Typography.Text>{\" \"}\n          {phone}\n        </List.Item>\n      </List>\n\n      <Divider orientation=\"left\">Барбер</Divider>\n      <List bordered>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Барбер</Typography.Text> {barber}\n        </List.Item>\n        <List.Item style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Typography.Text type=\"secondary\">Цена</Typography.Text> {price}\n        </List.Item>\n      </List>\n    </>\n  );\n};\n\nexport { ClientDetails };\n","// Core\nimport React, { FC } from \"react\";\n\n// Component\nimport { MainLayout } from \"./MainLayout\";\nimport { Modal } from \"../components/Modal\";\nimport { ClientDetails } from \"../components/ClientDetails\";\n\nconst App: FC = () => {\n  return (\n    <div>\n      <MainLayout />\n      <Modal>\n        <ClientDetails/>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n","// Core\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Components\nimport App from \"./components/App\";\n\n// Styles\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}